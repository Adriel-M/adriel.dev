---
import Link from '@/components/Link.astro'
import type { SeoData } from '@/components/SEO.astro'
import RootLayout from '@/layouts/RootLayout.astro'
import { getTagCounts } from '@/libs/CollectionUtils'
import type { SluggedTag } from '@/libs/SluggedTag'
import { generateSluggedTag } from '@/libs/SluggedTag'
import { generateTagsPath, URLS } from '@/libs/UrlLibs'

interface Props {
  currentTag?: SluggedTag
}

function compareTagsByCountThenAlpha(
  tagCounts: Record<string, number>
): (a: string, b: string) => number {
  return function (a, b): number {
    return tagCounts[b] - tagCounts[a] || a.localeCompare(b)
  }
}

const tagCounts = await getTagCounts()

const tagKeys = Object.keys(tagCounts)
const sortedTags = tagKeys.sort(compareTagsByCountThenAlpha(tagCounts)).map(generateSluggedTag)

const { currentTag } = Astro.props

const ON_CURRENT_PAGE = 'text-primary-500 hover:text-primary-400'
const NOT_CURRENT_PAGE = 'hover:text-primary-400'

let title: string
let allPostsCss: string
let description: string

if (currentTag) {
  allPostsCss = NOT_CURRENT_PAGE
  title = currentTag.tag[0].toUpperCase() + currentTag.tag.split(' ').join('-').slice(1)
  description = `All blog posts for ${Astro.site!.toString()} with the tag: ${currentTag.tag}`
} else {
  allPostsCss = ON_CURRENT_PAGE
  title = 'All Posts'
  description = `All blog posts for ${Astro.site!.toString()}`
}

let ogPathname

if (currentTag) {
  ogPathname = `tag/${currentTag.tag}/og.png`
} else {
  ogPathname = 'posts/og.png'
}

const ogUrl = new URL(ogPathname, Astro.url.origin)

const seoData: SeoData = {
  type: 'full',
  title,
  description: description,
  ogImage: ogUrl.toString(),
}
---

<RootLayout seoData={seoData}>
  <div>
    <div class="py-6">
      <h1
        class="text-3xl leading-9 font-extrabold tracking-tight text-gray-900 sm:text-4xl sm:leading-10 md:text-6xl md:leading-14 lg:hidden"
      >
        {title}
      </h1>
    </div>
    <div class="flex flex-col lg:flex-row lg:space-x-24">
      <div
        class="flex h-full max-h-screen w-full flex-wrap justify-center overflow-auto rounded bg-gray-50 pt-5 lg:w-fit lg:justify-start"
      >
        <div class="px-6 py-4 text-center lg:text-left">
          <Link href={URLS.POSTS} class={`${allPostsCss} font-bold uppercase`}> All Posts </Link>
          <ul>
            {
              sortedTags.map((t) => {
                const tagCss = currentTag?.tag === t.tag ? ON_CURRENT_PAGE : NOT_CURRENT_PAGE
                return (
                  <li class="my-3">
                    <Link
                      href={generateTagsPath(t)}
                      class={`${tagCss} px-3 py-2 text-sm font-medium uppercase`}
                      aria-label={`View posts tagged ${t.tag}`}
                    >
                      {`${t.tag} (${tagCounts[t.tag]})`}
                    </Link>
                  </li>
                )
              })
            }
          </ul>
        </div>
      </div>
      <slot />
    </div>
  </div>
</RootLayout>
